const oldFileTable = { // collection('file')->doc(<fileID>)->
    "analysisAvailable": true, // boolean; true iff FEEDBACK (by LLM) is available
    "bucket": "resudemo1.firebasestorage.app",
    "feedback": {}, // FEEDBACK generated by LLM
    "filename": "filename.pdf", // original filename
    "model": "gemini-1000", // Model used in generating feedback
    "owner": "user-asdfuhewalidhef", // userID of owner, foreign key to user->userID
    "path": "userID/filename-timestamp.ext", // new filename in firebase storage (added timestamp to avoid collision)
    "recommendAvailable": false, // not used acatually
    "sourcePath": "[same as path?]", // Don't really know (not used)
    "updatedAt": "2025-08-08 12:00", // timestamp, of last update (Gen feedback by LLM)
    "uploadedDate": "2025-08-08 12:00" // timestamp of upload
}

const newFileTable = { // collection('file')->doc(<fileID>)->
    "analysis": {
        1: "{fileID}-1",
        2: "{fileID}-2"
    },                                       // dict, with index as key and `analysisID = {fileID}-{idx}` as value
    "lastUpdate": "2025-08-08 12:00",              // timestamp, of last update (Gen feedback by LLM); Same as `updatedAt` in the previous one
    "numAnalysis": 2,                        // number of total ANALYSIS (previously FEEDBACK, gen by LLM)
    "filename": "filename.pdf",              // Not changed
    "owner": "user-asdfuhewalidhef",         // Not changed
    "path": "userID/filename-timestamp.ext", // Not changed
    "uploadedDate": "2025-08-08 12:00"       // Not changed
}

const newAnalysisTable = {
    "content": {}, // FEEDBACK/ANALYSIS generated by LLM; the same as the `collection('file')->doc(...)->feedback` before
    "model": "gemini-1000", // Model used in generating feedback; Same purpose as that before
    "fileID": "...", // str, fileID, fk linked to file
    "nextAnalysis": "{fileID}-{#}", // analysisID of the next analysis; or `null` if this one is the last for the file
    "owner": "user-asdfuhewalidhef", // userID of owner, foreign key to user->userID
    "userComment": "some comments", // comment made by user; or `null` if user have not yet made any comment
    "userRating": 5 // int 1~5, or `null` if no score given; this is the score given by user.
}


/*
Would you consider the following dashb2.html (dashboard 2)? I need to make several changes to accomodate new feature (allowing multiple feedback/analysis for the same file; and offer user the chance to ask for new analysis from LLM) and new DB structure.

For new addition in UI, I want to make the following changes when user are viewing feedback (now called "analysis") but no change need to be made to the style sheet or the original file list.
1. At the top of the pop-up window, add something like `⇐  {currentAnalysisIndex} / {numAnalysis}  ⇒`, aligned in horizontal center.
- The table shows the content of the $$n^{th}$$ analysis, where $$ n = \texttt{currentAnalysisIndex} $$; the fields (gaps, summary, keywords, etc.) are the same as that before.
- When the filename is clicked, it automatically shows the last feedback (`currentAnalysisIndex = numAnalysis`). This design is to make the user always check the latest analysis.
- The left arrow (⇐) is clickable and displayed in black if `currentAnalysisIndex != 1` (the current one is not the first one); otherwise (if it's the first), it's not displayed.
- Similarly, the right arrow (⇒) is clickabled and displayed in black color iff `currentAnalysisIndex != numAnalysis` (this is not the last one). Otherwise (if it's last), it's not displayed.
- (With that being said, if no analysis is available, the file is not clickable (and the pop up shall not be shown); and if there is only one analysis available, then probably it is shown as `1 / 1` with no arrow)
- When either the left arrow or the right arrow is being clicked, the **value** of the field in analysis shall be withdrawn (and wrote "loading..." instead), until the new one is loaded (to be placed in these fields). Field names (gaps, summary, keywords, etc.) shall remain.
- If the left arrow was clicked, the previous analysis shall be loaded next (`currentAnalysisIndex-1`); If the right arrow was clicked, the next analysis shall be loaded next (`currentAnalysisIndex+1`)

2. At the bottom of the pop-up window, when user have not given a score **OR** when user haven't input anything in the input box.
- [At this time, `collection('analysis')->doc(<analysisID>)->userRating` and `->userComment` shall both have value `null`]
- There shall be five stars after the table (of analysis content) and aligned to the left horizontally, each originally in light purple and hollow (not filled).
- There shall be a button called "Post & Generate New", in color Gray and not clickable (when either comment box is empty OR score is not given). This box is aligned vertically on the same row as those fire stars, but horizontally to the right.
- Below the fire stars and the button, there shall be an input box. When user have not entered anything into it, it shal show "Leave some comments...". Plz note this is not some text pre-entered into the input box, but shall rather disappear when user key in something.

3. At the bottom of the pop-up window, when user have given a score **AND** entered some comments, **BUT NOT YET CLICKED THE BUTTON** (so the comment and score are not posted).
- [At this time, `collection('analysis')->doc(<analysisID>)->userRating` and `->userComment` are both `null`].
- The stars, up to the one user clicked, shall be filled (like that in the 3rd image). For example, if the user clicked the fourth star, then star 1, 2, 3, and 4 shall be filled (in dark purple), but not the 5th one, which shall remain hollow.
- This score shall be taken down in some variables in js scripts (as it will be submitted/posted along with the comment.)
- User are allowed to re-choose the score (by clicking on another star). For example, if the user decided to change the score to 3 after clicking the fourth star, then (1) only the first three stars shall be filled, and (2) the fourth and fifth star shall be hollow. (3) the variable value shall change from 4 to 3.
- When both the input box is filled, and when the user have chosen a score (by clicking on the star), the "Submit & Generate New" button shall have a green background (and becomes clickable).

4. At the bottom of the pop-up window, when a score and the comment is available in database.
- [At this time, `collection('analysis')->doc(<analysisID>)->userRating` and `->userComment` shall be a valid, non-empty `int` and `str` respectively.]
- There shall still be five stars, but in gray color. The number of stars filled shall be the same as `collection('analysis')->doc(<analysisID>)->userRating`; and the number of hollow stars shall be 5 minus that.
- The comment given by the user is displayed below. And the user is not allowed to make any changed to the comment (but only viewed).
- The "Submit and Generate New" button is no longer visible.
*/
